/* 
 * Electronic Bill Of Lading Service
 *
 * This document provides an electronic Bill of Lading (eBOL). The eBOL is a legal document that provides a contract between the shipper, carrier and consignee stating what goods are being shipped, where the shipment is coming from and where it’s headed to. “Pro” number is the unique identifier for the document for update and delete functions.
 *
 * OpenAPI spec version: 2.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
namespace dotnet_example.RequestModels.BOL.v202
{
    /// <summary>
    /// BOLRequestAccessorialsAppointmentDetailsPickup
    /// </summary>
    [DataContract]
        public partial class BOLRequestAccessorialsAppointmentDetailsPickup :  IEquatable<BOLRequestAccessorialsAppointmentDetailsPickup>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BOLRequestAccessorialsAppointmentDetailsPickup" /> class.
        /// </summary>
        /// <param name="start">Starting appointment date (with or without time) the shipment is requested to be picked up.  Required when accessorials.code list include APTP.  Valid Formats: * YYYY-MM-DDTHH:mm:ss.sss (ISO 8601) .</param>
        /// <param name="end">Ending appointment date (with or without time) the shipment is requested to be picked up.  Valid Formats: * YYYY-MM-DDTHH:mm:ss.sss (ISO 8601) .</param>
        public BOLRequestAccessorialsAppointmentDetailsPickup(string start = default(string), string end = default(string))
        {
            this.Start = start;
            this.End = end;
        }
        
        /// <summary>
        /// Starting appointment date (with or without time) the shipment is requested to be picked up.  Required when accessorials.code list include APTP.  Valid Formats: * YYYY-MM-DDTHH:mm:ss.sss (ISO 8601) 
        /// </summary>
        /// <value>Starting appointment date (with or without time) the shipment is requested to be picked up.  Required when accessorials.code list include APTP.  Valid Formats: * YYYY-MM-DDTHH:mm:ss.sss (ISO 8601) </value>
        [DataMember(Name="start", EmitDefaultValue=false)]
        public string Start { get; set; }

        /// <summary>
        /// Ending appointment date (with or without time) the shipment is requested to be picked up.  Valid Formats: * YYYY-MM-DDTHH:mm:ss.sss (ISO 8601) 
        /// </summary>
        /// <value>Ending appointment date (with or without time) the shipment is requested to be picked up.  Valid Formats: * YYYY-MM-DDTHH:mm:ss.sss (ISO 8601) </value>
        [DataMember(Name="end", EmitDefaultValue=false)]
        public string End { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BOLRequestAccessorialsAppointmentDetailsPickup {\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BOLRequestAccessorialsAppointmentDetailsPickup);
        }

        /// <summary>
        /// Returns true if BOLRequestAccessorialsAppointmentDetailsPickup instances are equal
        /// </summary>
        /// <param name="input">Instance of BOLRequestAccessorialsAppointmentDetailsPickup to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BOLRequestAccessorialsAppointmentDetailsPickup input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Start == input.Start ||
                    (this.Start != null &&
                    this.Start.Equals(input.Start))
                ) && 
                (
                    this.End == input.End ||
                    (this.End != null &&
                    this.End.Equals(input.End))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Start != null)
                    hashCode = hashCode * 59 + this.Start.GetHashCode();
                if (this.End != null)
                    hashCode = hashCode * 59 + this.End.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
