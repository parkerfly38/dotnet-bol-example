/* 
 * Electronic Bill Of Lading Service
 *
 * This document provides an electronic Bill of Lading (eBOL). The eBOL is a legal document that provides a contract between the shipper, carrier and consignee stating what goods are being shipped, where the shipment is coming from and where it’s headed to. “Pro” number is the unique identifier for the document for update and delete functions.
 *
 * OpenAPI spec version: 2.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
namespace dotnet_example.RequestModels.BOL.v202
{
    /// <summary>
    /// Required if accessorial codes list contains HAZ and/or if any commodity line item&#x27;s hazardous flag is set to true. 
    /// </summary>
    [DataContract]
        public partial class BOLRequestAccessorialsHazardousDetails :  IEquatable<BOLRequestAccessorialsHazardousDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BOLRequestAccessorialsHazardousDetails" /> class.
        /// </summary>
        /// <param name="emergencyContact">emergencyContact.</param>
        public BOLRequestAccessorialsHazardousDetails(BOLRequestAccessorialsHazardousDetailsEmergencyContact emergencyContact = default(BOLRequestAccessorialsHazardousDetailsEmergencyContact))
        {
            this.EmergencyContact = emergencyContact;
        }
        
        /// <summary>
        /// Gets or Sets EmergencyContact
        /// </summary>
        [DataMember(Name="emergencyContact", EmitDefaultValue=false)]
        public BOLRequestAccessorialsHazardousDetailsEmergencyContact EmergencyContact { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BOLRequestAccessorialsHazardousDetails {\n");
            sb.Append("  EmergencyContact: ").Append(EmergencyContact).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BOLRequestAccessorialsHazardousDetails);
        }

        /// <summary>
        /// Returns true if BOLRequestAccessorialsHazardousDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of BOLRequestAccessorialsHazardousDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BOLRequestAccessorialsHazardousDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EmergencyContact == input.EmergencyContact ||
                    (this.EmergencyContact != null &&
                    this.EmergencyContact.Equals(input.EmergencyContact))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EmergencyContact != null)
                    hashCode = hashCode * 59 + this.EmergencyContact.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
